<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_drafts on 0xo7&#39;s Blog</title>
    <link>https://0xo7.github.io/_drafts/</link>
    <description>Recent content in _drafts on 0xo7&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 19 Dec 2024 21:19:28 +0800</lastBuildDate><atom:link href="https://0xo7.github.io/_drafts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows 系统封装相关知识</title>
      <link>https://0xo7.github.io/_drafts/2024-1219-02/</link>
      <pubDate>Thu, 19 Dec 2024 21:19:28 +0800</pubDate>
      
      <guid>https://0xo7.github.io/_drafts/2024-1219-02/</guid>
      <description>Windows 系统封装前置基础知识 &amp;hellip;</description>
    </item>
    
    <item>
      <title>Goland 配置</title>
      <link>https://0xo7.github.io/_drafts/2024-1224-01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://0xo7.github.io/_drafts/2024-1224-01/</guid>
      <description>GOPATH和GOROOT Go开发相关的环境变量如下：
GOROOT：GOROOT就是Go的安装目录，（类似于java的JDK） GOPATH：GOPATH是我们的工作空间，保存go项目代码和第三方依赖包 GOPATH 可以设置多个，其中，第一个将会是默认的包目录，使用 go get 下载的包都会在第一个 path 中的 src 目录下，使用 go install 时，在哪个 GOPATH 中找到了这个包，就会在哪个 GOPATH 下的bin目录生成可执行文件
GOROOT 作为 go 的安装目录，我们可以在安装 Goland 前，提前安装好 go 语言，</description>
    </item>
    
  </channel>
</rss>
